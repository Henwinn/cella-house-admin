{"remainingRequest":"C:\\Users\\Henwin\\Desktop\\skripsp\\Cella dashboard\\cella-house-dashboard\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Henwin\\Desktop\\skripsp\\Cella dashboard\\cella-house-dashboard\\src\\components\\Charts\\LineChart.js","dependencies":[{"path":"C:\\Users\\Henwin\\Desktop\\skripsp\\Cella dashboard\\cella-house-dashboard\\src\\components\\Charts\\LineChart.js","mtime":1616820233081},{"path":"C:\\Users\\Henwin\\Desktop\\skripsp\\Cella dashboard\\cella-house-dashboard\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Henwin\\Desktop\\skripsp\\Cella dashboard\\cella-house-dashboard\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgTGluZSwgbWl4aW5zIH0gZnJvbSAndnVlLWNoYXJ0anMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2xpbmUtY2hhcnQnLAogIGV4dGVuZHM6IExpbmUsCiAgbWl4aW5zOiBbbWl4aW5zLnJlYWN0aXZlUHJvcF0sCiAgcHJvcHM6IHsKICAgIGV4dHJhT3B0aW9uczogT2JqZWN0LAogICAgZ3JhZGllbnRDb2xvcnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6ICgpID0+IFsncmdiYSg3Miw3MiwxNzYsMC4yKScsICdyZ2JhKDcyLDcyLDE3NiwwLjApJywgJ3JnYmEoMTE5LDUyLDE2OSwwKSddLAogICAgICB2YWxpZGF0b3I6IHZhbCA9PiB7CiAgICAgICAgcmV0dXJuIHZhbC5sZW5ndGggPiAyOwogICAgICB9CiAgICB9LAogICAgZ3JhZGllbnRTdG9wczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gWzEsIDAuNCwgMF0sCiAgICAgIHZhbGlkYXRvcjogdmFsID0+IHsKICAgICAgICByZXR1cm4gdmFsLmxlbmd0aCA+IDI7CiAgICAgIH0KICAgIH0KICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3R4OiBudWxsCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZUdyYWRpZW50cyhjaGFydERhdGEpIHsKICAgICAgaWYgKCFjaGFydERhdGEpIHJldHVybjsKICAgICAgY29uc3QgY3R4ID0gdGhpcy5jdHggfHwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQodGhpcy5jaGFydElkKS5nZXRDb250ZXh0KCcyZCcpOwogICAgICBjb25zdCBncmFkaWVudFN0cm9rZSA9IGN0eC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAyMzAsIDAsIDUwKTsKICAgICAgZ3JhZGllbnRTdHJva2UuYWRkQ29sb3JTdG9wKHRoaXMuZ3JhZGllbnRTdG9wc1swXSwgdGhpcy5ncmFkaWVudENvbG9yc1swXSk7CiAgICAgIGdyYWRpZW50U3Ryb2tlLmFkZENvbG9yU3RvcCh0aGlzLmdyYWRpZW50U3RvcHNbMV0sIHRoaXMuZ3JhZGllbnRDb2xvcnNbMV0pOwogICAgICBncmFkaWVudFN0cm9rZS5hZGRDb2xvclN0b3AodGhpcy5ncmFkaWVudFN0b3BzWzJdLCB0aGlzLmdyYWRpZW50Q29sb3JzWzJdKTsKICAgICAgY2hhcnREYXRhLmRhdGFzZXRzLmZvckVhY2goc2V0ID0+IHsKICAgICAgICBzZXQuYmFja2dyb3VuZENvbG9yID0gZ3JhZGllbnRTdHJva2U7CiAgICAgIH0pOwogICAgfQoKICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy4kd2F0Y2goJ2NoYXJ0RGF0YScsIChuZXdWYWwsIG9sZFZhbCkgPT4gewogICAgICB0aGlzLnVwZGF0ZUdyYWRpZW50cyh0aGlzLmNoYXJ0RGF0YSk7CgogICAgICBpZiAoIW9sZFZhbCkgewogICAgICAgIHRoaXMucmVuZGVyQ2hhcnQodGhpcy5jaGFydERhdGEsIHRoaXMuZXh0cmFPcHRpb25zKTsKICAgICAgfQogICAgfSwgewogICAgICBpbW1lZGlhdGU6IHRydWUKICAgIH0pOwogIH0KCn07"},{"version":3,"sources":["C:/Users/Henwin/Desktop/skripsp/Cella dashboard/cella-house-dashboard/src/components/Charts/LineChart.js"],"names":["Line","mixins","name","extends","reactiveProp","props","extraOptions","Object","gradientColors","type","Array","default","validator","val","length","gradientStops","data","ctx","methods","updateGradients","chartData","document","getElementById","chartId","getContext","gradientStroke","createLinearGradient","addColorStop","datasets","forEach","set","backgroundColor","mounted","$watch","newVal","oldVal","renderChart","immediate"],"mappings":"AAAA,SAASA,IAAT,EAAeC,MAAf,QAA6B,aAA7B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,YADO;AAEbC,EAAAA,OAAO,EAAEH,IAFI;AAGbC,EAAAA,MAAM,EAAE,CAACA,MAAM,CAACG,YAAR,CAHK;AAIbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,YAAY,EAAEC,MADT;AAELC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAEC,KADQ;AAEdC,MAAAA,OAAO,EAAE,MAAM,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,oBAA/C,CAFD;AAGdC,MAAAA,SAAS,EAAEC,GAAG,IAAI;AAChB,eAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB;AACD;AALa,KAFX;AASLC,IAAAA,aAAa,EAAE;AACbN,MAAAA,IAAI,EAAEC,KADO;AAEbC,MAAAA,OAAO,EAAE,MAAM,CAAC,CAAD,EAAI,GAAJ,EAAS,CAAT,CAFF;AAGbC,MAAAA,SAAS,EAAEC,GAAG,IAAI;AAChB,eAAOA,GAAG,CAACC,MAAJ,GAAa,CAApB;AACD;AALY;AATV,GAJM;;AAqBbE,EAAAA,IAAI,GAAG;AACL,WAAO;AACLC,MAAAA,GAAG,EAAE;AADA,KAAP;AAGD,GAzBY;;AA0BbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,CAACC,SAAD,EAAY;AACzB,UAAG,CAACA,SAAJ,EAAe;AACf,YAAMH,GAAG,GAAG,KAAKA,GAAL,IAAYI,QAAQ,CAACC,cAAT,CAAwB,KAAKC,OAA7B,EAAsCC,UAAtC,CAAiD,IAAjD,CAAxB;AACA,YAAMC,cAAc,GAAGR,GAAG,CAACS,oBAAJ,CAAyB,CAAzB,EAA4B,GAA5B,EAAiC,CAAjC,EAAoC,EAApC,CAAvB;AAEAD,MAAAA,cAAc,CAACE,YAAf,CAA4B,KAAKZ,aAAL,CAAmB,CAAnB,CAA5B,EAAmD,KAAKP,cAAL,CAAoB,CAApB,CAAnD;AACAiB,MAAAA,cAAc,CAACE,YAAf,CAA4B,KAAKZ,aAAL,CAAmB,CAAnB,CAA5B,EAAmD,KAAKP,cAAL,CAAoB,CAApB,CAAnD;AACAiB,MAAAA,cAAc,CAACE,YAAf,CAA4B,KAAKZ,aAAL,CAAmB,CAAnB,CAA5B,EAAmD,KAAKP,cAAL,CAAoB,CAApB,CAAnD;AACAY,MAAAA,SAAS,CAACQ,QAAV,CAAmBC,OAAnB,CAA2BC,GAAG,IAAI;AAChCA,QAAAA,GAAG,CAACC,eAAJ,GAAsBN,cAAtB;AACD,OAFD;AAGD;;AAZM,GA1BI;;AAwCbO,EAAAA,OAAO,GAAG;AACR,SAAKC,MAAL,CAAY,WAAZ,EAAyB,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC3C,WAAKhB,eAAL,CAAqB,KAAKC,SAA1B;;AACA,UAAI,CAACe,MAAL,EAAa;AACX,aAAKC,WAAL,CACE,KAAKhB,SADP,EAEE,KAAKd,YAFP;AAID;AACF,KARD,EAQG;AAAE+B,MAAAA,SAAS,EAAE;AAAb,KARH;AASD;;AAlDY,CAAf","sourcesContent":["import { Line, mixins } from 'vue-chartjs';\r\n\r\nexport default {\r\n  name: 'line-chart',\r\n  extends: Line,\r\n  mixins: [mixins.reactiveProp],\r\n  props: {\r\n    extraOptions: Object,\r\n    gradientColors: {\r\n      type: Array,\r\n      default: () => ['rgba(72,72,176,0.2)', 'rgba(72,72,176,0.0)', 'rgba(119,52,169,0)'],\r\n      validator: val => {\r\n        return val.length > 2;\r\n      }\r\n    },\r\n    gradientStops: {\r\n      type: Array,\r\n      default: () => [1, 0.4, 0],\r\n      validator: val => {\r\n        return val.length > 2;\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      ctx: null\r\n    };\r\n  },\r\n  methods: {\r\n    updateGradients(chartData) {\r\n      if(!chartData) return;\r\n      const ctx = this.ctx || document.getElementById(this.chartId).getContext('2d');\r\n      const gradientStroke = ctx.createLinearGradient(0, 230, 0, 50);\r\n\r\n      gradientStroke.addColorStop(this.gradientStops[0], this.gradientColors[0]);\r\n      gradientStroke.addColorStop(this.gradientStops[1], this.gradientColors[1]);\r\n      gradientStroke.addColorStop(this.gradientStops[2], this.gradientColors[2]);\r\n      chartData.datasets.forEach(set => {\r\n        set.backgroundColor = gradientStroke;\r\n      });\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$watch('chartData', (newVal, oldVal) => {\r\n      this.updateGradients(this.chartData);\r\n      if (!oldVal) {\r\n        this.renderChart(\r\n          this.chartData,\r\n          this.extraOptions\r\n        );\r\n      }\r\n    }, { immediate: true });\r\n  }\r\n};\r\n"]}]}